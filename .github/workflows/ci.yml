on:
  push:
    branches:
      - homework_1

defaults:
  run:
    shell: bash

jobs:
  build_and_test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Installing
        run: |
          sudo apt update
          sudo apt install valgrind
          git clone https://github.com/google/googletest.git -b release-1.11.0
          cd googletest
          mkdir build
          cd build
          cmake .. -DBUILD_GMOCK=OFF
          make
          sudo make install
          cd ../..
      - name: Building
        run: |
          cmake CMakeLists.txt
          make
      - name: Testing
        run: |
          valgrind --tool=memcheck --leak-check=full ./tests
  linters_and_formaters:
    runs-on: ubuntu-latest
    needs: [build_and_test]
    steps:
      - uses: actions/checkout@v2
      - name: Installing
        run: |
          sudo apt update
          sudo apt install cppcheck
          sudo apt install clang-format
          pip install cpplint
          pip install scan-build
          sudo chmod +x ./scripts/formating.sh
          sudo chmod +x ./scripts/install_fbinfer.sh
          ./scripts/install_fbinfer.sh
          git clone https://github.com/google/googletest.git -b release-1.11.0
          cd googletest
          mkdir build
          cd build
          cmake .. -DBUILD_GMOCK=OFF
          make
          sudo make install
          cd ../..
      - name: Building
        run: |
          cmake CMakeLists.txt
      - name: Formating
        run: |
          ./scripts/formating.sh
      - name: Cppcheck
        run: |
          cppcheck --inconclusive --enable=all --language=c++ ./tests.cpp
          cppcheck --inconclusive --enable=all --language=c ./main.c ./array_of_rates.c ./exchange_rate.c
      - name: Cpplint
        run: |
          cpplint --filter=-legal/copyright,-readability/casting,-whitespace/tab --linelength=110 ./main.c ./exchange_rate.c ./array_of_rates.c ./array_of_rates.h ./exchange_rate.h
      - name: Scan-build
        run: |
          scan-build make
      - name : fbinfer
        run: |
          infer run --compilation-database compile_commands.json
