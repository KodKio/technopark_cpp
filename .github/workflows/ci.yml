on:
  push:
    branches:
      - homework_1

defaults:
  run:
    shell: bash

jobs:
  build_and_test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Installing
        run: |
          sudo apt update
          sudo apt install valgrind
          pip install gcovr
          git clone https://github.com/google/googletest.git -b release-1.11.0
          cd googletest
          mkdir build
          cd build
          cmake .. -DBUILD_GMOCK=OFF
          make
          sudo make install
          cd ../..
      - name: Building
        run: |
          mkdir build
          cd build
          cmake ..
          make
      - name: Testing
        run: |
          valgrind --tool=memcheck --leak-check=full ./build/tests/test_exchange_rates
      - name: Genarate coverage
        run: |
          cd build
          mkdir coverage-report
          cd coverage-report
          gcovr -r ../../ --filter ../../project/source/ -o coverage.xml --xml
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v2
        with:
          token: 78688142-4057-47ea-8c80-46a22c531a0a
          files: ./build/coverage-report/coverage.xml
  linters_and_formaters:
    runs-on: ubuntu-latest
    needs: [build_and_test]
    steps:
      - uses: actions/checkout@v2
      - name: Installing
        run: |
          sudo apt update
          sudo apt install cppcheck
          sudo apt install clang-format
          pip install cpplint
          pip install scan-build
          sudo chmod +x ./scripts/formating.sh
          git clone https://github.com/google/googletest.git -b release-1.11.0
          cd googletest
          mkdir build
          cd build
          cmake .. -DBUILD_GMOCK=OFF
          make
          sudo make install
          cd ../..
      - name: Building
        run: |
          mkdir build
          cd build
          cmake ..
          make
      - name: Check format
        run: |
          cd ./scripts
          ./formating.sh
          cd ..
      - name: Cppcheck
        run: |
          cppcheck --inconclusive --enable=all --language=c++ ./tests/tests.cpp
          cppcheck --inconclusive --enable=all --language=c ./project/source/*.c ./main.c
      - name: Cpplint
        run: |
          cpplint --filter=-legal/copyright,-readability/casting,-whitespace/tab,-build/include_subdir --linelength=110 ./main.c ./project/source/*.c ./project/include/*.h
      - name: Scan-build
        run: |
          cd build
          scan-build make
